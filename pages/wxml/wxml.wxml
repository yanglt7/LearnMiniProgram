<!--pages/wxml/wxml.wxml-->
<!-- 1.wxml的基本使用 -->

<!-- 2.Mustache语法 -->
<view>{{message}}</view>
<view>{{firstname}} {{lastname}}</view>
<view>{{firstname + ' ' + lastname}}</view>
<view>{{age >= 18 ? '成年人' : '未成年人'}}</view>
<view>{{nowTime}}</view>
<button size="mini" bindtap="handleSwitchColor">切换颜色</button>
<view class="box {{isActive ? 'active' : ''}}">哈哈哈</view>

<!-- 3.条件判断 -->
<!-- wx:if的使用 -->
<button size="mini" bindtap="handleSwitchShow">显示/隐藏</button>
<view wx:if="{{isShow}}">呵呵呵</view>

<!-- wx:elif / wx:else  -->
<view>{{score}}</view>
<button size="mini" bindtap="handleIncrement">分数+6</button>
<view wx:if="{{score >= 90}}">优秀</view>
<view wx:elif="{{score >= 80}}">良好</view>
<view wx:elif="{{score >= 60}}">及格</view>
<view wx:else>不及格</view>

<!-- 4.hidden属性 -->
<view hidden="{{false}}">我是hidden属性控制的内容</view>

<!-- wx:if 和 hidden在隐藏组件时有什么区别 -->
<!-- 
区别:
  hidden将组件隐藏时, 该组件依然存在(display: none)
  wx:if将组件隐藏时, 该组件没有创建 
选择:  
  如果显示和隐藏切换频率高, 选择hidden
  如果显示和隐藏切换频率非常低, 选择wx:if
-->
<view>-------------------------------------------</view>
<view hidden="{{false}}">我是通过hidden控制的内容</view>
<view wx:if="{{true}}">我是通过wx:if控制的内容</view>

<!-- 5.列表渲染 -->
<!-- 5.1 遍历数组/字符串/数字 -->
<view wx:for="{{['abc', 'cba', 'nba']}}">{{item}} {{index}}</view>
<view wx:for="yanglt">{{item + ' ' + index}}</view>
<view wx:for="{{10}}">{{item}}</view>

<!-- 5.2 block只是一个标签, 不会在页面进行渲染 -->
<!-- block只接收控制属性 -->
<block wx:if="{{isShow}}">
  <button size="mini">按钮</button>
  <text>呵呵呵</text>
  <view>哈哈哈</view>
</block>

<block wx:for="{{3}}">
  <button size="mini">按钮</button>
  <text>呵呵呵</text>
  <view>哈哈哈</view>
</block>

<!-- 5.3 给item/index起名字 -->
<view wx:for="{{movies}}" wx:for-item="movie" wx:for-index="i">{{movie}}-{{i}}</view>

<block wx:for="{{nums}}" wx:for-item="innernums">
  <block wx:for="{{innernums}}">
    <view>{{item}}</view>  
  </block>
</block>

<!-- 5.4 key的作用 -->
<!-- <view wx:for="{{letters}}">{{item}}</view> -->

<!-- 5.5 template -->
<!-- 之前小程序不支持自定义组件, 为了进行代码复用: template -->
<!-- template包含的内容, 在没有使用前不会进行渲染 -->
<!-- <template name="contentItem">
  <button size="mini">{{btnText}}</button>
  <view>{{content}}</view>
</template> -->
 

<import src="/wxml/template.wxml" />
<!-- <include src='/wxml/template.wxml'/> -->
<!-- <template is="abc"/> -->

<template is="contentItem" data="{{btnText: '按钮', content: '哈哈哈'}}" />
<template is="contentItem" data="{{btnText: '警告', content: '呵呵呵'}}" />
<template is="contentItem" data="{{btnText: '点击', content: '嘿嘿嘿'}}" />
<template is="contentItem" data="{{btnText: '登录', content: '嘻嘻嘻'}}" />

<!-- 结论: 不能进行递归导入, include不能进行模板导入-->
<!-- 
关于wxml的导入有两种方式:
  import导入:
  1.主要是导入template
  2.特点: 不能进行递归导入
  include导入:
  1.将公共的wxml中的组件抽取到一个文件中
  2.特点: 不能导入template/wxs, 可以进行递归导入 
-->